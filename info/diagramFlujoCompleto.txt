flowchart TD
    %% Usuarios y Puntos de entrada
    User([Usuario]):::user

    %% Páginas de entrada
    User -->|Accede| Index["/index.php"]:::frontend
    Index -->|Selecciona| Single["/single-payment.php"]:::frontend
    Index -->|Selecciona| Subscriptions["/subscriptions-payment.php"]:::frontend

    %% Flujo de Pago Único
    Single -->|onClick| SinglePaymentJS["subscription-payment.js\nfetch()"]:::frontend
    SinglePaymentJS -->|POST| CreatePaymentSession["/v1/create_payment_session.php"]:::api

    %% Flujo de Suscripción
    Subscriptions -->|onClick| SubscriptionPaymentJS["subscription-payment.js\nfetch()"]:::frontend
    SubscriptionPaymentJS -->|POST| CreateSubscriptionSession["/v1/create_subscription_session.php"]:::api

    %% Servicios de Checkout
    CreatePaymentSession -->|instancia| CheckoutService["StripeCheckoutSessionServiceImpl"]:::service
    CreateSubscriptionSession -->|instancia| CheckoutService
    CheckoutService -->|API call| StripeAPI[("Stripe API")]:::external

    %% Redirección y Checkout de Stripe
    StripeAPI -->|redirect_to| StripeCheckout["Stripe Checkout\nFormulario de Pago"]:::external
    StripeCheckout -->|success_url| SuccessPage["/success.html"]:::frontend
    StripeCheckout -->|cancel_url| CancelPage["/cancel.html"]:::frontend

    %% Flujo de Webhook
    StripeAPI -->|Envía eventos| WebhookEndpoint["/v1/webhook.php"]:::api
    WebhookEndpoint -->|instancia| WebhookController["StripeWebhookControllerImpl"]:::controller
    WebhookController -->|procesa| WebhookService["StripeWebhookServiceImpl"]:::service
    WebhookService -->|verifica firma| StripeSig{{"¿Firma válida?"}}:::decision

    %% Logging de Payloads
    WebhookService -->|registra| PayloadLogger["StripePayloadLogger"]:::logger
    StripeSig -->|No| ErrorLogger["ErrorLogger"]:::logger

    %% Selección e implementación de estrategias
    StripeSig -->|Sí| EventType{{"Tipo de evento"}}:::decision

    %% Estrategias específicas
    EventType -->|checkout.session.completed| CheckoutStrategy["CheckoutSessionCompletedStrategyImpl"]:::strategy
    EventType -->|payment_intent.succeeded| PaymentIntentStrategy["PaymentIntentSucceededStrategyImpl"]:::strategy
    EventType -->|charge.succeeded| ChargeStrategy["ChargeSucceededStrategyImpl"]:::strategy
    EventType -->|customer.subscription.created| SubCreatedStrategy["SubscriptionCreatedStrategyImpl"]:::strategy
    EventType -->|customer.subscription.updated| SubUpdatedStrategy["SubscriptionUpdatedStrategyImpl"]:::strategy
    EventType -->|customer.subscription.deleted| SubDeletedStrategy["SubscriptionDeletedStrategyImpl"]:::strategy
    EventType -->|invoice.paid| InvoicePaidStrategy["InvoicePaidStrategyImpl"]:::strategy
    EventType -->|customer.created/updated| CustomerStrategy["CustomerCreatedOrUpdatedStrategyImpl"]:::strategy
    EventType -->|otros| UnhandledLogger["UnhandledStripeEventLogger"]:::logger

    %% Mapeo de datos
    CheckoutStrategy -->|usa| CheckoutMapper["CheckoutSessionMapper"]:::mapper
    PaymentIntentStrategy -->|usa| PaymentIntentMapper["PaymentIntentMapper"]:::mapper
    ChargeStrategy -->|usa| ChargeMapper["ChargeMapper"]:::mapper
    SubCreatedStrategy & SubUpdatedStrategy & SubDeletedStrategy -->|usa| SubscriptionMapper["SubscriptionMapper"]:::mapper
    InvoicePaidStrategy -->|usa| InvoiceMapper["InvoiceMapper"]:::mapper
    CustomerStrategy -->|usa| CustomerMapper["CustomerMapper"]:::mapper

    %% DTOs
    CheckoutMapper -->|crea| CheckoutDTO["CheckoutSessionCompletedDTO"]:::dto
    PaymentIntentMapper -->|crea| PaymentIntentDTO["PaymentIntentDTO"]:::dto
    ChargeMapper -->|crea| ChargeDTO["ChargeDTO"]:::dto
    SubscriptionMapper -->|crea| SubscriptionDTO["SubscriptionDTO"]:::dto
    InvoiceMapper -->|crea| InvoiceDTO["InvoiceDTO"]:::dto
    CustomerMapper -->|crea| CustomerDTO["CustomerDTO"]:::dto

    %% Factories y creación de modelos
    PaymentIntentStrategy & ChargeStrategy & InvoicePaidStrategy -->|usa| TransactionFactory["TransactionModelFactory"]:::factory
    SubCreatedStrategy & SubUpdatedStrategy & SubDeletedStrategy -->|usa| SubscriptionFactory["SubscriptionModelFactory"]:::factory

    %% Modelos/Entidades
    TransactionFactory -->|crea| TransactionModel["TransactionsModel"]:::entity
    SubscriptionFactory -->|crea| SubscriptionModel["SubscriptionsModel"]:::entity

    %% Repositorios
    TransactionModel -->|persistido por| TransactionRepo["TransactionRepositoryImpl"]:::repository
    SubscriptionModel -->|persistido por| SubscriptionRepo["SubscriptionRepositoryImpl"]:::repository
    InvoiceDTO -->|consultado por| InvoiceRepo["InvoiceRepositoryImpl"]:::repository

    %% Base de datos
    TransactionRepo & SubscriptionRepo & InvoiceRepo -->|operaciones| Database[("Base de Datos\nMySQL")]:::database

    %% Visualización de datos
    User -->|Consulta| InvoicesPage["/invoices.php"]:::frontend
    User -->|Consulta| SubscriptionsPage["/view-subscriptions.php"]:::frontend

    %% APIs para consultas
    InvoicesPage -->|fetch| ApiInvoices["/api/api-invoices.php"]:::api
    SubscriptionsPage -->|fetch| ApiSubscriptions["/api/api-subscriptions.php"]:::api
    SubscriptionsPage -->|administra| ApiManageSub["/api/api-manage-subscription.php"]:::api

    %% Controladores para visualización
    ApiInvoices -->|instancia| InvoiceController["StripeInvoiceControllerImpl"]:::controller
    ApiSubscriptions & ApiManageSub -->|instancia| SubscriptionController["StripeSubscriptionControllerImpl"]:::controller

    %% Servicios para gestión de suscripciones
    SubscriptionController -->|usa| SubscriptionService["StripeSubscriptionManagementServiceImpl"]:::service
    SubscriptionService -->|API call| StripeAPI

    %% Panel de administración
    User -->|Acceso admin| AdminPanel["/admin/panel.php"]:::frontend
    AdminPanel -->|fetch| PanelApi["/admin/api/panel_api.php"]:::api

    %% Definición de estilos
    classDef user fill:#ECF0F1,stroke:#95A5A6,stroke-width:2px,color:#34495E,font-weight:bold;
    classDef frontend fill:#D5F5E3,stroke:#2ECC71,stroke-width:2px,color:#27AE60;
    classDef api fill:#D6EAF8,stroke:#3498DB,stroke-width:2px,color:#2980B9;
    classDef controller fill:#E8DAEF,stroke:#8E44AD,stroke-width:2px,color:#8E44AD;
    classDef service fill:#FADBD8,stroke:#E74C3C,stroke-width:2px,color:#C0392B;
    classDef strategy fill:#FCF3CF,stroke:#F1C40F,stroke-width:2px,color:#F39C12;
    classDef mapper fill:#FEF9E7,stroke:#F7DC6F,stroke-width:2px,color:#D4AC0D;
    classDef dto fill:#FDEBD0,stroke:#F5B041,stroke-width:2px,color:#D35400;
    classDef factory fill:#EBDEF0,stroke:#A569BD,stroke-width:2px,color:#8E44AD;
    classDef entity fill:#D6DBDF,stroke:#85929E,stroke-width:2px,color:#2C3E50;
    classDef repository fill:#F4ECF7,stroke:#BB8FCE,stroke-width:2px,color:#8E44AD;
    classDef database fill:#E5E8E8,stroke:#99A3A4,stroke-width:2px,color:#2C3E50,font-weight:bold;
    classDef external fill:#F2D7D5,stroke:#EC7063,stroke-width:2px,color:#CB4335;
    classDef logger fill:#D0ECE7,stroke:#45B39D,stroke-width:2px,color:#16A085;
    classDef decision fill:#F5EEF8,stroke:#AF7AC5,stroke-width:2px,color:#8E44AD,shape:diamond;